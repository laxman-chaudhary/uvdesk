<?php

namespace Proxies\__CG__\Webkul\UVDesk\CoreFrameworkBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Thread extends \Webkul\UVDesk\CoreFrameworkBundle\Entity\Thread implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'id', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'source', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'messageId', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'threadType', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'createdBy', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'cc', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'bcc', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'replyTo', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'deliveryStatus', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'isLocked', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'isBookmarked', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'message', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'createdAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'updatedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'agentViewedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'customerViewedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'ticket', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'user', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'attachments'];
        }

        return ['__isInitialized__', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'id', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'source', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'messageId', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'threadType', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'createdBy', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'cc', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'bcc', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'replyTo', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'deliveryStatus', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'isLocked', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'isBookmarked', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'message', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'createdAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'updatedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'agentViewedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'customerViewedAt', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'ticket', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'user', '' . "\0" . 'Webkul\\UVDesk\\CoreFrameworkBundle\\Entity\\Thread' . "\0" . 'attachments'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Thread $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageId($messageId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageId', [$messageId]);

        return parent::setMessageId($messageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageId', []);

        return parent::getMessageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setThreadType($threadType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThreadType', [$threadType]);

        return parent::setThreadType($threadType);
    }

    /**
     * {@inheritDoc}
     */
    public function getThreadType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThreadType', []);

        return parent::getThreadType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCc($cc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCc', [$cc]);

        return parent::setCc($cc);
    }

    /**
     * {@inheritDoc}
     */
    public function getCc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCc', []);

        return parent::getCc();
    }

    /**
     * {@inheritDoc}
     */
    public function setBcc($bcc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBcc', [$bcc]);

        return parent::setBcc($bcc);
    }

    /**
     * {@inheritDoc}
     */
    public function getBcc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBcc', []);

        return parent::getBcc();
    }

    /**
     * {@inheritDoc}
     */
    public function setReplyTo($replyTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReplyTo', [$replyTo]);

        return parent::setReplyTo($replyTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getReplyTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReplyTo', []);

        return parent::getReplyTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeliveryStatus($deliveryStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeliveryStatus', [$deliveryStatus]);

        return parent::setDeliveryStatus($deliveryStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeliveryStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeliveryStatus', []);

        return parent::getDeliveryStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLocked($isLocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLocked', [$isLocked]);

        return parent::setIsLocked($isLocked);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsLocked', []);

        return parent::getIsLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsBookmarked($isBookmarked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsBookmarked', [$isBookmarked]);

        return parent::setIsBookmarked($isBookmarked);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsBookmarked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsBookmarked', []);

        return parent::getIsBookmarked();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', [$message]);

        return parent::setMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', []);

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgentViewedAt($agentViewedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgentViewedAt', [$agentViewedAt]);

        return parent::setAgentViewedAt($agentViewedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgentViewedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgentViewedAt', []);

        return parent::getAgentViewedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerViewedAt($customerViewedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerViewedAt', [$customerViewedAt]);

        return parent::setCustomerViewedAt($customerViewedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerViewedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerViewedAt', []);

        return parent::getCustomerViewedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicket(\Webkul\UVDesk\CoreFrameworkBundle\Entity\Ticket $ticket = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicket', [$ticket]);

        return parent::setTicket($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicket()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicket', []);

        return parent::getTicket();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Webkul\UVDesk\CoreFrameworkBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addAttachment(\Webkul\UVDesk\CoreFrameworkBundle\Entity\Attachment $attachments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttachment', [$attachments]);

        return parent::addAttachment($attachments);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAttachment(\Webkul\UVDesk\CoreFrameworkBundle\Entity\Attachment $attachments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAttachment', [$attachments]);

        return parent::removeAttachment($attachments);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttachments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachments', []);

        return parent::getAttachments();
    }

}
